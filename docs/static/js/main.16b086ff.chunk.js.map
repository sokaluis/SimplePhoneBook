{"version":3,"sources":["context/AppReducer.tsx","context/AppContext.tsx","components/SearchInput.tsx","hooks/useDebounceValue.tsx","components/Contacts.tsx","hooks/useSearchContact.tsx","components/FormContact.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppReducer","state","action","type","contacts","payload","contact","dateAdded","Date","AppInitialState","id","uniqid","firstName","lastName","fullName","phone","AppContext","createContext","AppProvider","children","useReducer","dispatch","Provider","value","addNewContact","SearchInput","onDebounce","useState","textValue","setTextValue","debounceValue","input","time","setDebounceValue","useEffect","timeout","setTimeout","clearTimeout","useDebounceValue","Box","sx","width","FormControl","variant","OutlinedInput","fullWidth","startAdornment","InputAdornment","position","placeholder","onChange","e","target","useStyles","makeStyles","container","Contacts","styles","useContext","isFetching","setIsFetching","contactList","setContactList","useSearchContact","term","setTerm","contacFiltered","setContacFiltered","length","isNaN","Number","filter","item","toLocaleLowerCase","includes","contacNumber","find","Container","maxWidth","className","Typography","gutterBottom","component","display","flex","justifyContent","mt","CircularProgress","List","map","ListItem","alignItems","backgroundColor","color","margin","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Fragment","Stack","direction","spacing","IconButton","aria-label","reverse","style","top","left","transform","bgcolor","boxShadow","p","FormContact","classes","setContact","open","setOpen","handleClose","handleContactInfo","field","Grid","Button","size","onClick","button","endIcon","Modal","keepMounted","onClose","aria-labelledby","aria-describedby","TextField","label","inputProps","inputMode","pattern","flexDirection","App","xs","align","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16b086ff.chunk.js","sourcesContent":["import { IAppState, IContact } from \"./AppContext\";\n\ninterface ContactPayload {\n  contact: IContact;\n}\n\ntype AppActions = { type: \"ADD_CONTACT\"; payload: ContactPayload };\n\nexport const AppReducer = (state: IAppState, action: AppActions) => {\n  switch (action.type) {\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [\n          ...state.contacts,\n          action.payload.contact\n        ],\n        dateAdded: new Date(),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createContext, useReducer } from \"react\";\nimport { AppReducer } from \"./AppReducer\";\nimport uniqid from \"uniqid\";\n\nexport interface IContact {\n  id: string;\n  firstName: string;\n  lastName: string;\n  fullName: string;\n  phone: number;\n}\n\nexport interface IAppState {\n  contacts: IContact[];\n  dateAdded: Date;\n}\n\ninterface IAppContext {\n  state: IAppState;\n  addNewContact: (contact: IContact) => void;\n}\n\nexport const AppInitialState: IAppState = {\n  contacts: [\n    {\n      id: uniqid(),\n      firstName: \"Luis\",\n      lastName: \"Azocar\",\n      fullName: \"Luis Azocar\",\n      phone: 1134837364,\n    },\n  ],\n  dateAdded: new Date(),\n};\n\nexport const AppContext = createContext({} as IAppContext);\n\nexport const AppProvider = ({ children }: { children: JSX.Element }) => {\n  const [state, dispatch] = useReducer(AppReducer, AppInitialState);\n\n  const addNewContact = (contact: IContact) => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: {\n        contact,\n      },\n    });\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        state,\n        addNewContact,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { Box, FormControl, InputAdornment, OutlinedInput } from \"@mui/material\";\nimport Search from \"@mui/icons-material/Search\";\nimport { useDebounceValue } from \"../hooks/useDebounceValue\";\n\ninterface Props {\n  onDebounce: (value: string) => void;\n}\n\nconst SearchInput = ({ onDebounce }: Props) => {\n  const [textValue, setTextValue] = useState(\"\");\n  const { debounceValue } = useDebounceValue(textValue);\n\n  useEffect(() => {\n    onDebounce(debounceValue);\n  }, [debounceValue]);\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <FormControl variant=\"filled\" sx={{ width: \"100%\" }}>\n        <OutlinedInput\n          fullWidth\n          type=\"text\"\n          startAdornment={\n            <InputAdornment position=\"end\">\n              <Search />\n            </InputAdornment>\n          }\n          placeholder=\"Search...\"\n          value={textValue}\n          onChange={(e) => setTextValue(e.target.value)}\n        />\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default SearchInput;\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable no-sequences */\nimport { useEffect, useState } from \"react\";\n\nexport const useDebounceValue = (input: string = \"\", time: number = 500) => {\n  const [debounceValue, setDebounceValue] = useState(input);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setDebounceValue(input);\n    }, time);\n    return () => clearTimeout(timeout);\n  }),\n    [input];\n\n  return {\n    debounceValue,\n  };\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { useSearchContact } from \"../hooks/useSearchContact\";\nimport {\n  Avatar,\n  Box,\n  CircularProgress,\n  Container,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  Stack,\n  IconButton,\n} from \"@mui/material\";\nimport SearchInput from \"./SearchInput\";\nimport { IContact } from \"../context/AppContext\";\nimport { makeStyles } from \"@mui/styles\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\n\nconst Contacts = () => {\n  const styles = useStyles();\n  const { contactList, isFetching } = useSearchContact();\n  const [term, setTerm] = useState(\"\");\n  const [contacFiltered, setContacFiltered] = useState<IContact[]>(contactList);\n\n  useEffect(() => {\n    if (term.length === 0) {\n      setContacFiltered(contactList);\n    }\n  }, [contactList]);\n\n  useEffect(() => {\n    if (term.length === 0) {\n      return setContacFiltered(contactList);\n    }\n    if (isNaN(Number(term))) {\n      setContacFiltered(\n        contactList.filter((item) =>\n          item.fullName.toLocaleLowerCase().includes(term.toLocaleLowerCase())\n        )\n      );\n    } else {\n      const contacNumber = contactList.find((item) => item.id === term);\n      setContacFiltered(contacNumber ? [contacNumber] : []);\n    }\n  }, [term]);\n\n  return (\n    <Container maxWidth=\"sm\" className={styles.container}>\n      <Typography variant=\"h5\" gutterBottom component=\"div\">\n        Contacts\n      </Typography>\n      <SearchInput onDebounce={setTerm} />\n      {isFetching ? (\n        <Box sx={{ display: \"flex\", flex: 1, justifyContent: 'center' }} mt={5}>\n          <CircularProgress />\n        </Box>\n      ) : (\n        <List sx={{ width: \"100%\" }}>\n          {contacFiltered\n            .map((item) => (\n              <ListItem\n                key={item.id}\n                alignItems=\"flex-start\"\n                sx={{\n                  backgroundColor: \"#193c56\",\n                  color: \"#FFF\",\n                  margin: \"1rem 0\",\n                }}\n              >\n                <ListItemAvatar>\n                  <Avatar\n                    alt={item.firstName}\n                    src=\"/static/images/avatar/1.jpg\"\n                  />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${item.firstName} ${item.lastName}`}\n                  secondary={\n                    <React.Fragment>\n                      <Typography\n                        sx={{ display: \"inline\", color: \"#FFF\" }}\n                        component=\"span\"\n                        variant=\"body2\"\n                      >\n                        {item.phone}\n                      </Typography>\n                    </React.Fragment>\n                  }\n                />\n                <Stack direction=\"row\" spacing={1} mt={1}>\n                  <IconButton sx={{ color: \"#FFF\" }} aria-label=\"delete\">\n                    <DeleteIcon />\n                  </IconButton>\n                  <IconButton sx={{ color: \"#FFF\" }} aria-label=\"delete\">\n                    <EditIcon />\n                  </IconButton>\n                </Stack>\n              </ListItem>\n            ))\n            .reverse()}\n        </List>\n      )}\n    </Container>\n  );\n};\n\nconst useStyles = makeStyles({\n  container: {},\n});\n\nexport default Contacts;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useContext, useEffect, useState } from \"react\";\nimport { IContact, AppContext } from \"../context/AppContext\";\n\nexport const useSearchContact = () => {\n  const {\n    state: { contacts },\n  } = useContext(AppContext);\n  const [isFetching, setIsFetching] = useState<boolean>(false);\n  const [contactList, setContactList] = useState<IContact[]>(contacts);\n\n  useEffect(() => {\n    setIsFetching(true);\n    setTimeout(() => {\n      setContactList(contacts);\n      setIsFetching(false);\n    }, 2000);\n  }, [contactList, contacts]);\n\n  return {\n    isFetching,\n    contactList,\n  };\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useContext, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport uniqid from \"uniqid\";\nimport {\n  Box,\n  Container,\n  TextField,\n  Typography,\n  Button,\n  Modal,\n  Grid,\n} from \"@mui/material\";\nimport { IContact, AppContext } from \"../context/AppContext\";\nimport PlusOne from \"@mui/icons-material/PlusOne\";\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport const FormContact = () => {\n  const { addNewContact } = useContext(AppContext);\n  const classes = useStyles();\n  const id = uniqid.time();\n  const [contact, setContact] = useState<IContact>({\n    id,\n    firstName: \"\",\n    lastName: \"\",\n    fullName: \"\",\n    phone: 0,\n  });\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const handleContactInfo = (\n    value: number | string,\n    field: keyof typeof contact\n  ) => {\n    setContact({\n      ...contact,\n      [field]: value,\n    });\n  };\n\n  const handleNewContact = () => {\n    addNewContact({\n      ...contact,\n      fullName: `${contact.firstName} ${contact.lastName}`,\n    });\n    setContact({\n      id,\n      firstName: \"\",\n      lastName: \"\",\n      fullName: \"\",\n      phone: 0,\n    });\n    handleClose();\n  };\n\n  useEffect(() => {\n    setContact({\n      ...contact,\n    });\n  }, []);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Grid sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          onClick={handleOpen}\n          className={classes.button}\n          endIcon={<PlusOne />}\n        >\n          Add Contact\n        </Button>\n      </Grid>\n      <Modal\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"keep-mounted-modal-title\"\n        aria-describedby=\"keep-mounted-modal-description\"\n      >\n        <Box sx={style} component=\"form\" className={classes.container}>\n          <Typography variant=\"h5\" gutterBottom component=\"div\">\n            New Contact\n          </Typography>\n          <TextField\n            fullWidth\n            type=\"text\"\n            className={classes.input}\n            id=\"outlined-basic\"\n            label=\"Firts Name\"\n            variant=\"outlined\"\n            value={contact.firstName}\n            onChange={(e) => handleContactInfo(e.target.value, \"firstName\")}\n          />\n          <TextField\n            fullWidth\n            type=\"text\"\n            className={classes.input}\n            id=\"outlined-basic\"\n            label=\"Last Name\"\n            variant=\"outlined\"\n            value={contact.lastName}\n            onChange={(e) => handleContactInfo(e.target.value, \"lastName\")}\n          />\n          <TextField\n            fullWidth\n            type=\"number\"\n            className={classes.input}\n            id=\"outlined-basic\"\n            label=\"Phone Number\"\n            variant=\"outlined\"\n            value={contact.phone}\n            inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n            onChange={(e) => handleContactInfo(Number(e.target.value), \"phone\")}\n          />\n          <Button onClick={handleNewContact}>Add new contact</Button>\n        </Box>\n      </Modal>\n    </Container>\n  );\n};\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  input: {\n    margin: \"0.5rem 0\",\n  },\n  button: {\n    backgroundColor: \"#414141\",\n    margin: \"0.5rem 0\",\n  },\n});\n","import { Container, Grid, Typography } from \"@mui/material\";\nimport { AppProvider } from \"./context/AppContext\";\nimport Contacts from \"./components/Contacts\";\nimport { FormContact } from \"./components/FormContact\";\n\nconst App = () => {\n  return (\n    <AppProvider>\n      <Grid container>\n        <Grid item xs={12} mt={2}>\n          <Container maxWidth=\"sm\">\n            <Typography\n              variant=\"h2\"\n              gutterBottom\n              component=\"div\"\n              align=\"center\"\n            >\n              My Phone Book\n            </Typography>\n          </Container>\n        </Grid>\n        <Grid item xs={12}>\n          <FormContact />\n        </Grid>\n        <Grid item xs={12}>\n          <Contacts />\n        </Grid>\n      </Grid>\n    </AppProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}